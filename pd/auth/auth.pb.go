// Code generated by protoc-gen-go. DO NOT EDIT.
// source: auth.proto

package auth

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ValidateRequest struct {
	RawIdToken           string   `protobuf:"bytes,1,opt,name=raw_id_token,json=rawIdToken,proto3" json:"raw_id_token,omitempty"`
	ClaimNames           []string `protobuf:"bytes,2,rep,name=claim_names,json=claimNames,proto3" json:"claim_names,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ValidateRequest) Reset()         { *m = ValidateRequest{} }
func (m *ValidateRequest) String() string { return proto.CompactTextString(m) }
func (*ValidateRequest) ProtoMessage()    {}
func (*ValidateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8bbd6f3875b0e874, []int{0}
}

func (m *ValidateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValidateRequest.Unmarshal(m, b)
}
func (m *ValidateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValidateRequest.Marshal(b, m, deterministic)
}
func (m *ValidateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValidateRequest.Merge(m, src)
}
func (m *ValidateRequest) XXX_Size() int {
	return xxx_messageInfo_ValidateRequest.Size(m)
}
func (m *ValidateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ValidateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ValidateRequest proto.InternalMessageInfo

func (m *ValidateRequest) GetRawIdToken() string {
	if m != nil {
		return m.RawIdToken
	}
	return ""
}

func (m *ValidateRequest) GetClaimNames() []string {
	if m != nil {
		return m.ClaimNames
	}
	return nil
}

type ValidateResponse struct {
	// how about using 'Any' here?
	Claims               map[string]*Value `protobuf:"bytes,1,rep,name=claims,proto3" json:"claims,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ValidateResponse) Reset()         { *m = ValidateResponse{} }
func (m *ValidateResponse) String() string { return proto.CompactTextString(m) }
func (*ValidateResponse) ProtoMessage()    {}
func (*ValidateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8bbd6f3875b0e874, []int{1}
}

func (m *ValidateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValidateResponse.Unmarshal(m, b)
}
func (m *ValidateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValidateResponse.Marshal(b, m, deterministic)
}
func (m *ValidateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValidateResponse.Merge(m, src)
}
func (m *ValidateResponse) XXX_Size() int {
	return xxx_messageInfo_ValidateResponse.Size(m)
}
func (m *ValidateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ValidateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ValidateResponse proto.InternalMessageInfo

func (m *ValidateResponse) GetClaims() map[string]*Value {
	if m != nil {
		return m.Claims
	}
	return nil
}

type Value struct {
	// Types that are valid to be assigned to Type:
	//	*Value_Str
	//	*Value_Int_64
	//	*Value_Bytes
	Type                 isValue_Type `protobuf_oneof:"type"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Value) Reset()         { *m = Value{} }
func (m *Value) String() string { return proto.CompactTextString(m) }
func (*Value) ProtoMessage()    {}
func (*Value) Descriptor() ([]byte, []int) {
	return fileDescriptor_8bbd6f3875b0e874, []int{2}
}

func (m *Value) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Value.Unmarshal(m, b)
}
func (m *Value) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Value.Marshal(b, m, deterministic)
}
func (m *Value) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Value.Merge(m, src)
}
func (m *Value) XXX_Size() int {
	return xxx_messageInfo_Value.Size(m)
}
func (m *Value) XXX_DiscardUnknown() {
	xxx_messageInfo_Value.DiscardUnknown(m)
}

var xxx_messageInfo_Value proto.InternalMessageInfo

type isValue_Type interface {
	isValue_Type()
}

type Value_Str struct {
	Str string `protobuf:"bytes,1,opt,name=str,proto3,oneof"`
}

type Value_Int_64 struct {
	Int_64 int64 `protobuf:"varint,2,opt,name=int_64,json=int64,proto3,oneof"`
}

type Value_Bytes struct {
	Bytes []byte `protobuf:"bytes,3,opt,name=bytes,proto3,oneof"`
}

func (*Value_Str) isValue_Type() {}

func (*Value_Int_64) isValue_Type() {}

func (*Value_Bytes) isValue_Type() {}

func (m *Value) GetType() isValue_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *Value) GetStr() string {
	if x, ok := m.GetType().(*Value_Str); ok {
		return x.Str
	}
	return ""
}

func (m *Value) GetInt_64() int64 {
	if x, ok := m.GetType().(*Value_Int_64); ok {
		return x.Int_64
	}
	return 0
}

func (m *Value) GetBytes() []byte {
	if x, ok := m.GetType().(*Value_Bytes); ok {
		return x.Bytes
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Value) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Value_Str)(nil),
		(*Value_Int_64)(nil),
		(*Value_Bytes)(nil),
	}
}

func init() {
	proto.RegisterType((*ValidateRequest)(nil), "auth.ValidateRequest")
	proto.RegisterType((*ValidateResponse)(nil), "auth.ValidateResponse")
	proto.RegisterMapType((map[string]*Value)(nil), "auth.ValidateResponse.ClaimsEntry")
	proto.RegisterType((*Value)(nil), "auth.Value")
}

func init() { proto.RegisterFile("auth.proto", fileDescriptor_8bbd6f3875b0e874) }

var fileDescriptor_8bbd6f3875b0e874 = []byte{
	// 308 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x91, 0x4f, 0x4f, 0xf2, 0x40,
	0x10, 0xc6, 0x59, 0x4a, 0x1b, 0xde, 0x29, 0xc9, 0x4b, 0x26, 0x11, 0x1b, 0x2e, 0xd6, 0x9e, 0x7a,
	0xea, 0x01, 0x09, 0x51, 0x3c, 0x89, 0xd1, 0xe0, 0xc5, 0x43, 0x25, 0x1e, 0xbc, 0x34, 0x0b, 0x4c,
	0x42, 0x03, 0xb4, 0xb5, 0x3b, 0x85, 0xf4, 0x8b, 0xf8, 0x79, 0xcd, 0x2e, 0xf8, 0x27, 0xc4, 0xdb,
	0xcc, 0x6f, 0x9e, 0x7d, 0x32, 0xcf, 0x0e, 0x80, 0xac, 0x78, 0x15, 0x15, 0x65, 0xce, 0x39, 0xb6,
	0x74, 0x1d, 0xcc, 0xe0, 0xff, 0xab, 0xdc, 0xa4, 0x4b, 0xc9, 0x14, 0xd3, 0x7b, 0x45, 0x8a, 0xd1,
	0x87, 0x4e, 0x29, 0xf7, 0x49, 0xba, 0x4c, 0x38, 0x5f, 0x53, 0xe6, 0x09, 0x5f, 0x84, 0xff, 0x62,
	0x28, 0xe5, 0xfe, 0x69, 0x39, 0xd3, 0x04, 0x2f, 0xc0, 0x5d, 0x6c, 0x64, 0xba, 0x4d, 0x32, 0xb9,
	0x25, 0xe5, 0x35, 0x7d, 0x4b, 0x0b, 0x0c, 0x7a, 0xd6, 0x24, 0xf8, 0x10, 0xd0, 0xfd, 0xb1, 0x55,
	0x45, 0x9e, 0x29, 0xc2, 0x31, 0x38, 0x46, 0xa2, 0x3c, 0xe1, 0x5b, 0xa1, 0x3b, 0x08, 0x22, 0xb3,
	0xcd, 0xa9, 0x2e, 0xba, 0x37, 0xa2, 0x87, 0x8c, 0xcb, 0x3a, 0x3e, 0xbe, 0xe8, 0x3f, 0x82, 0xfb,
	0x0b, 0x63, 0x17, 0xac, 0x35, 0xd5, 0xc7, 0xcd, 0x74, 0x89, 0x97, 0x60, 0xef, 0xe4, 0xa6, 0x22,
	0xaf, 0xe9, 0x8b, 0xd0, 0x1d, 0xb8, 0xdf, 0xde, 0x15, 0xc5, 0x87, 0xc9, 0xb8, 0x79, 0x2d, 0x82,
	0x19, 0xd8, 0x86, 0x21, 0x82, 0xa5, 0xb8, 0x3c, 0x38, 0x4c, 0x1b, 0xb1, 0x6e, 0xf0, 0x1c, 0x9c,
	0x34, 0xe3, 0x64, 0x34, 0x34, 0x26, 0xd6, 0xb4, 0x11, 0xdb, 0x69, 0xc6, 0xa3, 0x21, 0xf6, 0xc0,
	0x9e, 0xd7, 0x4c, 0xca, 0xb3, 0x7c, 0x11, 0x76, 0x34, 0x37, 0xed, 0xc4, 0x81, 0x16, 0xd7, 0x05,
	0x0d, 0xa6, 0xe0, 0xde, 0x55, 0xbc, 0x7a, 0xa1, 0x72, 0x97, 0x2e, 0x08, 0x6f, 0xa0, 0xfd, 0x15,
	0x0a, 0xcf, 0x4e, 0x43, 0x9a, 0x3f, 0xee, 0xf7, 0xfe, 0xce, 0x3e, 0x69, 0xbf, 0x39, 0xd1, 0xad,
	0x1e, 0xcd, 0x1d, 0x73, 0xa5, 0xab, 0xcf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x0d, 0x70, 0xd9, 0x5d,
	0xb3, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AuthServiceClient is the client API for AuthService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AuthServiceClient interface {
	Validate(ctx context.Context, in *ValidateRequest, opts ...grpc.CallOption) (*ValidateResponse, error)
}

type authServiceClient struct {
	cc *grpc.ClientConn
}

func NewAuthServiceClient(cc *grpc.ClientConn) AuthServiceClient {
	return &authServiceClient{cc}
}

func (c *authServiceClient) Validate(ctx context.Context, in *ValidateRequest, opts ...grpc.CallOption) (*ValidateResponse, error) {
	out := new(ValidateResponse)
	err := c.cc.Invoke(ctx, "/auth.AuthService/Validate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AuthServiceServer is the server API for AuthService service.
type AuthServiceServer interface {
	Validate(context.Context, *ValidateRequest) (*ValidateResponse, error)
}

// UnimplementedAuthServiceServer can be embedded to have forward compatible implementations.
type UnimplementedAuthServiceServer struct {
}

func (*UnimplementedAuthServiceServer) Validate(ctx context.Context, req *ValidateRequest) (*ValidateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Validate not implemented")
}

func RegisterAuthServiceServer(s *grpc.Server, srv AuthServiceServer) {
	s.RegisterService(&_AuthService_serviceDesc, srv)
}

func _AuthService_Validate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ValidateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServiceServer).Validate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/auth.AuthService/Validate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServiceServer).Validate(ctx, req.(*ValidateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AuthService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "auth.AuthService",
	HandlerType: (*AuthServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Validate",
			Handler:    _AuthService_Validate_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "auth.proto",
}
